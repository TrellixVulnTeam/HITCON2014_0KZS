Dump of assembler code for function main:
   0x0000000000400630 <+0>:	stp	x29, x30, [sp,#-64]!
   0x0000000000400634 <+4>:	mov	x29, sp
   0x0000000000400638 <+8>:	mov	w0, #0x1e                  	// #30
   0x000000000040063c <+12>:	stp	x19, x20, [sp,#16]
   0x0000000000400640 <+16>:	stp	x21, x22, [sp,#32]
   0x0000000000400644 <+20>:	bl	0x400620 <alarm@plt>
   0x0000000000400648 <+24>:	adrp	x0, 0x400000
   0x000000000040064c <+28>:	mov	w1, #0x0                   	// #0
   0x0000000000400660 <+48>:	add	x0, x29, #0x30
   0x0000000000400664 <+52>:	bl	0x4008a8 <readline>
   0x0000000000400668 <+56>:	add	x0, x29, #0x30
   0x000000000040066c <+60>:	mov	x1, #0x0                   	// #0
   0x0000000000400670 <+64>:	mov	w2, #0xa                   	// #10
   0x0000000000400674 <+68>:	bl	0x4005f0 <strtol@plt>
   0x0000000000400678 <+72>:	cmp	w0, #0x100
   0x000000000040067c <+76>:	mov	x20, x0
   0x0000000000400680 <+80>:	b.hi	0x40071c <main+236>
   0x0000000000400684 <+84>:	adrp	x21, 0x411000 <_exit@got.plt>
   0x0000000000400688 <+88>:	and	x19, x0, #0xffffffff
   0x000000000040068c <+92>:	add	x21, x21, #0x468
   0x0000000000400690 <+96>:	mov	w0, #0x0                   	// #0
   0x0000000000400694 <+100>:	mov	x1, x21
   0x0000000000400698 <+104>:	mov	x2, x19
   0x000000000040069c <+108>:	mov	x3, #0x400                 	// #1024
   0x00000000004006a0 <+112>:	bl	0x400600 <__read_chk@plt>
   0x00000000004006a4 <+116>:	cmp	x19, x0
   0x00000000004006a8 <+120>:	b.ne	0x400730 <main+256>
   0x00000000004006ac <+124>:	adrp	x22, 0x411000 <_exit@got.plt>
   0x00000000004006b0 <+128>:	add	x22, x22, #0x68
   0x00000000004006b4 <+132>:	ldr	w0, [x29,#56]
   0x00000000004006b8 <+136>:	mov	x1, x22
   0x00000000004006bc <+140>:	mov	x2, x19
   0x00000000004006c0 <+144>:	mov	x3, #0x400                 	// #1024
   0x00000000004006c4 <+148>:	bl	0x400600 <__read_chk@plt>
   0x00000000004006c8 <+152>:	cmp	x19, x0
   0x00000000004006cc <+156>:	b.ne	0x400730 <main+256>
   0x00000000004006d0 <+160>:	cbz	w20, 0x400704 <main+212>
   0x00000000004006d4 <+164>:	sub	w5, w20, #0x1
   0x00000000004006d8 <+168>:	add	x5, x5, #0x1
   0x00000000004006dc <+172>:	mov	x0, #0x0                   	// #0
   0x00000000004006e0 <+176>:	mov	x2, x21
   0x00000000004006e4 <+180>:	mov	x1, x22
   0x00000000004006e8 <+184>:	ldrb	w3, [x0,x2]
   0x00000000004006ec <+188>:	ldrb	w4, [x0,x1]
   0x00000000004006f0 <+192>:	eor	w3, w4, w3
   0x00000000004006f4 <+196>:	strb	w3, [x0,x2]
   0x00000000004006f8 <+200>:	add	x0, x0, #0x1
   0x00000000004006fc <+204>:	cmp	x0, x5
   0x0000000000400700 <+208>:	b.ne	0x4006e8 <main+184>
   0x0000000000400704 <+212>:	bl	0x411468 <code>
   0x0000000000400708 <+216>:	mov	w0, #0x0                   	// #0
   0x000000000040070c <+220>:	ldp	x19, x20, [sp,#16]
   0x0000000000400710 <+224>:	ldp	x21, x22, [sp,#32]
   0x0000000000400714 <+228>:	ldp	x29, x30, [sp],#64
   0x0000000000400718 <+232>:	ret
   0x000000000040071c <+236>:	adrp	x0, 0x400000
   0x0000000000400720 <+240>:	add	x0, x0, #0x9e0
   0x0000000000400724 <+244>:	bl	0x4005e0 <puts@plt>
   0x0000000000400728 <+248>:	mov	w0, #0x0                   	// #0
   0x000000000040072c <+252>:	bl	0x400590 <_exit@plt>
   0x0000000000400730 <+256>:	adrp	x0, 0x400000
   0x0000000000400734 <+260>:	add	x0, x0, #0x9f0
   0x0000000000400738 <+264>:	bl	0x4005e0 <puts@plt>
   0x000000000040073c <+268>:	mov	w0, #0x0                   	// #0
   0x0000000000400740 <+272>:	bl	0x400590 <_exit@plt>

Dump of assembler code for function readline:
   0x00000000004008a8 <+0>:   stp   x29, x30, [sp,#-48]!
   0x00000000004008ac <+4>:   mov   x29, sp
   0x00000000004008b0 <+8>:   stp   x21, x22, [sp,#32]
   0x00000000004008b4 <+12>:  stp   x19, x20, [sp,#16]
   0x00000000004008b8 <+16>:  mov   w21, w1
   0x00000000004008bc <+20>:  mov   x22, x0
   0x00000000004008c0 <+24>:  mov   x19, x0
   0x00000000004008c4 <+28>:  cbz   w1, 0x400904 <readline+92>
   0x00000000004008c8 <+32>:  mov   w20, #0x0                     // #0
   0x00000000004008cc <+36>:  b  0x4008e8 <readline+64>
   0x00000000004008d0 <+40>:  ldrb  w2, [x19]
   0x00000000004008d4 <+44>:  cmp   w2, #0xa
   0x00000000004008d8 <+48>:  b.eq  0x400904 <readline+92>
   0x00000000004008dc <+52>:  cmp   w20, w21
   0x00000000004008e0 <+56>:  add   x19, x19, #0x1
   0x00000000004008e4 <+60>:  b.eq  0x40091c <readline+116>
   0x00000000004008e8 <+64>:  mov   x1, x19
   0x00000000004008ec <+68>:  mov   w0, #0x0                      // #0
   0x00000000004008f0 <+72>:  mov   x2, #0x1                      // #1
   0x00000000004008f4 <+76>:  bl 0x400610 <read@plt>
   0x00000000004008f8 <+80>:  cmp   x0, #0x1
   0x00000000004008fc <+84>:  add   w20, w20, #0x1
   0x0000000000400900 <+88>:  b.eq  0x4008d0 <readline+40>
   0x0000000000400904 <+92>:  strb  wzr, [x19]
   0x0000000000400908 <+96>:  mov   w0, #0x0                      // #0
   0x000000000040090c <+100>: ldp   x19, x20, [sp,#16]
   0x0000000000400910 <+104>: ldp   x21, x22, [sp,#32]
   0x0000000000400914 <+108>: ldp   x29, x30, [sp],#48
   0x0000000000400918 <+112>: ret
   0x000000000040091c <+116>: add   x19, x22, w20, uxtw
   0x0000000000400920 <+120>: strb  wzr, [x19]
   0x0000000000400924 <+124>: mov   w0, #0x0                      // #0
   0x0000000000400928 <+128>: ldp   x19, x20, [sp,#16]
   0x000000000040092c <+132>: ldp   x21, x22, [sp,#32]
   0x0000000000400930 <+136>: ldp   x29, x30, [sp],#48
   0x0000000000400934 <+140>: ret